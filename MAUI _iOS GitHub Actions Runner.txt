
НАЗНАЧЕНИЕ.

Как на GitHube (https://github.com) используя  сервис "GitHub Actions Runner" и его виртуальные машины ОС,  выполнить сборку приложения и получить  исполняемые пакеты.
Visual Studio через меню "Git > Фиксация или скрытие" создает на GitHube рипозитарий и в нем копию своего проекта, затем согласно командам заложеными в конфиг файле "yml", в сервисе "GitHub Actions Runner" 
выполняются различные действия необходимые для создания сборки и  исполняемых пакетов приложения .  
(Адрес проекта в рипозитарии -> https://github.com/drfarcos/MauiBlazorGitHSample)
------------------------------

ПРИМЕР.

MAUI проект для iOS-платформы. Сборка проекта и получение на "GitHube" '.app' пакета для iOS-симулятора

1. Создать проект .NET MAUI:
   В файле проекта после "</PropertyGroup>" добавить фрагмент для платформы iOS 
  
	<PropertyGroup Condition="'$(TargetFramework)' == 'net9.0-ios' AND ( '$(Configuration)' == 'Release' OR '$(Configuration)' == 'Debug' )">
		<RuntimeIdentifiers>iossimulator-x64</RuntimeIdentifiers>
		<MtouchLink>SdkOnly</MtouchLink>
	</PropertyGroup>

  - "<RuntimeIdentifiers>iossimulator-x64" - указывает,что будет использован симулятор типа "iossimulator-x64 .
  - "<MtouchLink>SdkOnly" -, чтобы избежать ошибок, связанных с линковщиком и несовместимостью с новыми версиями API
     и удаляется неиспользуемый код из библиотек SDK.             
     
2. Создать учетную запись на GitHub:  
   Если нет учетной записи на GitHub, зарегистрируйтесь на GitHub (https://github.com/?form=MG0AV3).
   Для изменений и редактирования надо войти в систему используя учетные данные. 

3. Создание репозитория на GitHub:
   В Visual Studio перейдите в меню "Git" и выберите "Создать репозиторий Git...". Следуйте инструкциям для авторизации и подключения.
   Дождаться окончания операции. Будет создан локальный репозиторий и репозиторий на "https://github.com" в GitHub-е. 

4. Создать конфигурацию YAML в проекте .NET MAUI:
   В корне проекта создать вложенные каталоги .github/workflows, а в каталоге workflows создать файл конфигурации YAML
   (пример файла в проекте "\.github\workflows\dotnet-ios.yml").
   Это файл конфигурации, в котором должны содержатся различные шаги инструкций длясервиса GitHub Actions и виртуальной машины MacOS:
   компиляция, сборка проекта и прочее. 
 

5. Коммит изменений и отправка:     
   В меню "Git" выбрать "Фиксация или скрытие" и подписать действие, 
   затем в выпадающем списке выбрать "Зафиксировать все и отправить", это перенесет " .github/workflows/dotnet-ios.yml" в репозитарий на GitHub. 
   Каждый раз после каких либо изменений или добавлений в проекте Visual Studio, надо перейти в меню "Git" --> "Фиксация или скрытие" --> "Зафиксировать все и отправить" и "подписать действия" .

6. Запуск GitHub Actions:
   В браузере выполнить вход на GitHub открыть репозиторий. Перейдите на вкладку "Actions" и проверьте статус выполнения сборки проекта.

7. Получение файла .app:
   В разделе "Actions" после успешной сборки в разделе "Artifacts" появится файл с расширением .app.zip. Загрузите его для использования в симуляторе.

