
ОПИСАНИЕ.

Как на GitHube (https://github.com) используя  сервис "GitHub Actions Runner" и его виртуальные машины ОС,
выполнить сборку приложения и получить  исполняемые пакеты.

Этот проект выполняет сборку на "GitHub Actions Runner" для платформ iOS и Android.

Общие действия:
Зарегестрироваться на GitHub (https://github.com/?form=MG0AV3).
В Visual Studio через меню "Git > Фиксация или скрытие", создается на GitHube рипозитарий и в нем копия проекта,
затем, сервис "GitHub Actions Runner" согласно командам заложеными в конфиг файлах "yml", выполняет различные действия необходимые
для создания сборки проекта и исполняемых пакетов приложения.  

(Адрес проекта в рипозитарии -> https://github.com/drfarcos/MauiBlazorGitHSample)

------------------------------

ПРИМЕР.
Как при отсутствии реального (физического) устр. с macOS, выполнить сборку iOS-платформы в MAUI net9.0 проекте и получить '.app' пакет, для 
iOS-симулятора.


1. Создать в Windows, Visual Studio проект .NET MAUI Blazor net9.0:
   В файле проекта после "</PropertyGroup>" добавить фрагмент для платформы iOS 
  
	<PropertyGroup Condition="'$(TargetFramework)' == 'net9.0-ios' AND ( '$(Configuration)' == 'Release' OR '$(Configuration)' == 'Debug' )">
		<RuntimeIdentifiers>iossimulator-x64</RuntimeIdentifiers>
		<MtouchLink>SdkOnly</MtouchLink>
	</PropertyGroup>

  - "<RuntimeIdentifiers>iossimulator-x64" - указывает,что будет использован симулятор типа "iossimulator-x64 .
  - "<MtouchLink>SdkOnly" -необходим, чтобы избежать ошибок, связанных с линковщиком и несовместимостью с новыми версиями API
     и удаляется неиспользуемый код из библиотек SDK.             
     
2. Войти на GitHub по учетной записи :  
   Для выполнения каких либо действий надо войти на GitHub используя учетные данные. 

3. Создание репозитория на GitHub:
   В Visual Studio перейдите в меню "Git" и выберите "Создать репозиторий Git...". Следуйте инструкциям для авторизации и подключения.
   Дождаться окончания операции. Будет создан локальный репозиторий и репозиторий на "https://github.com" в GitHub-е. 

4. Создать конфигурацию YAML в проекте .NET MAUI:
   В корне проекта создать вложенные каталоги .github/workflows, а в каталоге workflows создать файл конфигурации YAML
   (пример файла в проекте "\.github\workflows\dotnet-ios.yml").
   Это файл конфигурации сервиса GitHub Actions и виртуальной машины MacOS, в нём содержатся различные шаги инструкций, например:
   компиляция, сборка проекта и прочее... 
 

5. Коммит изменений и отправка:     
   В меню "Git" выбрать "Фиксация или скрытие" и подписать действие, 
   затем в выпадающем списке выбрать "Зафиксировать все и отправить", это перенесет " .github/workflows/dotnet-ios.yml" в репозитарий на GitHub. 
   Каждый раз в проекте Visual Studio после каких либо изменений или добавлений надо выполнить следующее, перейти в меню "Git" --> "Фиксация или скрытие" --> "Зафиксировать все и отправить" и "подписать действия" .

6. Запуск GitHub Actions:
   В браузере выполнить вход на GitHub и зайти в репозиторий. Выбрать вкладку "Actions" и проверьте статус выполнения сборки проекта.

7. Получение файла .app:
   В разделе "Actions" после успешной сборки в разделе "Artifacts" появится файл с расширением .app.zip. Загрузите его для использования в симуляторе.

8. Использования в симуляторе:
   Запустить macOS Sanoma 14.7.2 и Xcode 15.4, затем симулятор iPHone SE iOS 17.0,
   открыть Safari-> браузер Bing https://github.com/drfarcos/MauiBlazorGitHSample и скачать из раздела "Artifacts" пакет .app, перейти в каталог загрузки и перетащить ".app
   в запущенный симулятор и запустить пакет на исполнение.